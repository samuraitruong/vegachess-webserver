# Start with a base image that has Go pre-installed
FROM golang:1.23 as builder

# Install required tools
RUN apt-get update && apt-get install -y \
    vsftpd \
    nano \
    && rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /app

# Copy Go source code into the container
COPY watcher/ /app/

# Install GoLand (Optional: if you're running locally and want an IDE, configure it outside the container)
# RUN wget -qO- https://download.jetbrains.com/go/goland-<version>.tar.gz | tar xvz

# Build Go application

RUN go mod init ftp-watcher && go mod tidy && go build -o watcher main.go

# Prepare final image
FROM debian:bookworm-slim

# Install required packages
RUN apt-get update && apt-get install -y \
    vsftpd net-tools ftp git curl  iptables\
    && rm -rf /var/lib/apt/lists/*

# Install pidproxy manually
RUN curl -o /usr/local/bin/pidproxy https://raw.githubusercontent.com/Supervisor/supervisor/main/supervisor/pidproxy && \
    chmod +x /usr/local/bin/pidproxy

# Copy FTP configuration
COPY vsftpd.conf /etc/vsftpd.conf

# Create FTP user and folder
RUN useradd -m ftpuser && echo "ftpuser:password" | chpasswd && \
    mkdir -p /home/ftpuser/ftp && chown -R ftpuser:ftpuser /home/ftpuser/ftp

# Expose FTP ports
EXPOSE 21 21000-21010
EXPOSE 8080
# Copy the built Go binary
COPY --from=builder /app/watcher /usr/local/bin/watcher
RUN mkdir /data && chown ftpuser:ftpuser /data && chmod 755 /data
# Run FTP server and watcher
# CMD ["/bin/bash", "-c", "vsftpd /etc/vsftpd.conf & watcher"]
COPY entrypoint.sh /etc/entrypoint.sh
ENV SSH_KEY_DIR=/root/.ssh
ENV GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

COPY .ssh /root/.ssh

# Set proper permissions for the SSH key
RUN chmod 600 /root/.ssh/id_ed25519 \
    && ssh-keyscan github.com >> /root/.ssh/known_hosts
WORKDIR /app
RUN chmod +x /etc/entrypoint.sh
ENTRYPOINT [ "/etc/entrypoint.sh" ]